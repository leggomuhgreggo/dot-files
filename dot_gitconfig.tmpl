[user]
	name = Greg Westneat
	email = "{{ .email }}"

[core]
	excludesfile = /Users/gregorywestneat/.gitignore_global
	editor = code --wait
[diff]
  tool = vscode
[difftool "vscode"]
  cmd = code --wait --diff $LOCAL $REMOTE
[merge]
  tool = vscode
[mergetool "vscode"]
  cmd = code --wait $MERGED

[rerere]
	enabled = true
	autoupdate = true

[alias]
	fetch-checkout = !sh -c 'git fetch $1 $2 && git checkout $2' -
	pushf = push --force-with-lease
	append = commit --amend --no-edit
	unstage = reset HEAD --
	prunelocal = !sh -c 'npx git-removed-branches --prune'
	recent = !git for-each-ref refs/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset)|%(color:bold green)%(committerdate:relative)%(color:reset)|%(contents:lines=1)|%(color:magenta)%(authorname)%(color:reset)' --count 100 --sort=-committerdate | column -ts '|' | less -SXRF
	fetch-pulls = !git -c remote.origin.fetch="+refs/pull/*/head:refs/remotes/origin/pull/*" fetch
	freebase = "!f() { \
    TOPIC="$(git branch | grep '\\*' | cut -d ' ' -f2)"; \
    NEWBASE="${1:-main}"; \
    PREVSHA1="$(git rev-parse HEAD)"; \
    echo "Freebaseing $TOPIC onto $NEWBASE, previous sha1 was $PREVSHA1"; \
    echo "---"; \
    git reset --hard "$NEWBASE"; \
    git merge --squash "$PREVSHA1"; \
    git commit; \
  }; f"

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[rebase]
	autosquash = true
	autoStash = true

[fetch]
	prune = true

[init]
	defaultBranch = main

[pull]
	rebase = true
