
# Shortcuts
alias dots="code $(chezmoi source-path)" 

alias projects="~/projects"
alias sg="~/projects/work"
alias jam="~/projects/personal"
alias downloads="cd ~/Downloads"
alias desktop="cd ~/Desktop"
alias mono="cd ~/work/sg-monorepo"

# Misc 
alias mkdir="mkdir -p"
alias kill3000='kill -9 $(lsof -i :3000 -t)'
alias tf="terraform"

# eza
alias lsa='eza -abghl --git --color=automatic --group-directories-first'
alias lC='la --sort=changed'
alias lM='la --sort=modified'
alias lS='la --sort=size'
alias lX='la --sort=extension'
alias tree='eza -l --git --tree'  
alias lt='eza --tree --level=2'  
alias ltt='eza --tree --level=3'  

# Git Aliases
alias gs='git status'
alias gac='git add . && git commit -m $1'
alias gc='git commit -m'
alias gb="git for-each-ref --sort=-committerdate refs/heads/ --format='%(authordate:short) %(color:red)%(objectname:short) %(color:yellow)%(refname:short)%(color:reset) (%(color:green)%(committerdate:relative)%(color:reset))'"
alias gbr="git for-each-ref --sort=-committerdate refs/heads/ refs/remotes --format='%(authordate:short) %(authorname) %(color:red)%(objectname:short) %(color:yellow)%(refname:short)%(color:reset) (%(color:green)%(committerdate:relative)%(color:reset))'"

gbup() {
    git checkout -b "chore/upgrade-$1-$(date +%Y-%m-%d)"
}


gbchop() {
    # Capture the name of the current branch
    local current_branch=$(git branch --show-current)
    # Check if the current branch is 'main'
    if [ "$current_branch" = "main" ]; then
        echo "Already on main branch, cannot delete."
        return 1 # Exit the function with an error
    fi

    # Checkout to the main branch
    git checkout main && \
    # Delete the former current branch
    git branch -d "$current_branch"
}

# ──────────────────────────────────────────────────────────────────────────────

# Functions modified to return values instead of printing directly
count_commits_since() {
    local commit_hash=$1
    git rev-list --count --first-parent $commit_hash..HEAD
}

count_affected_apps() {
    local commit_hash=$1
    git diff --name-only --first-parent $commit_hash..HEAD -- apps/ | cut -d'/' -f2 | sort -u | wc -l
}

count_affected_libs() {
    local commit_hash=$1
    git diff --name-only --first-parent $commit_hash..HEAD -- libs/ | cut -d'/' -f2 | sort -u | wc -l
}

count_lockfile_changes() {
    local commit_hash=$1
    git rev-list --count --first-parent $commit_hash..HEAD -- yarn.lock
}

# Main function to format and display the report
report_since() {
    local commit_hash=$1
    local keys=("Merge commits" "Affected projects in 'apps'" "Affected project folders in 'libs'" "Updates to npm dependencies")
    local values=(
        $(count_commits_since $commit_hash)
        $(count_affected_apps $commit_hash)
        $(count_affected_libs $commit_hash)
        $(count_lockfile_changes $commit_hash)
    )

    # Use associative arrays with zip operator
    typeset -A report=("${(@)keys:^values}")

    # Calculate max length of keys for alignment
    local max_length=0
    for key in "${keys[@]}"; do
        (( ${#key} > max_length )) && max_length=${#key}
    done

    # ──────────────────────────────────────────────────────────────────────
    
    echo  # This will add a line break at the end of the report output
    echo -e "\e[1;37;44mMonorepo Changes Since:\e[0m" "\e[1;4m$commit_hash\e[0m"

    # Print formatted output with dots
    for key value in "${(@kv)report}"; do
        local dots=$(( max_length + 30 - ${#key} - ${#value} ))  # adjust 30 to more if more space is needed
        printf "* %s:%s%s\n" "$key" "$(printf '.%.0s' {1..$dots})" "$value"
    done

    echo  # This will add a line break at the end of the report output
}

# 1Password Config/Aliases
alias oplogin='eval $(op signin my)'
alias oporder='op get totp "AWS - sweetgreen-order"'
alias avexec='aws-vault exec -m $(oporder) fresh-order'

# Always enable colored `grep` output
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# IP addresses
alias ip="dig +short myip.opendns.com @resolver1.opendns.com"
alias localip="ipconfig getifaddr en0"
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"

# Flush Directory Service cache
alias flush="dscacheutil -flushcache && killall -HUP mDNSResponder"

# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# Lock the screen (when going AFK)
alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"

# Reload the shell (i.e. invoke as a login shell)
alias reload="exec ${SHELL} -l"

# Pretty print the path
alias path='echo $PATH | tr -s ":" "\n"'

